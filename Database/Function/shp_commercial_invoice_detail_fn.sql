CREATE OR REPLACE FUNCTION public.shp_commercial_invoice_detail_fn(transtype character varying, v_shiporderno character varying)
  RETURNS TABLE(rowid integer, r_deliverynum character varying, r_pn character varying, r_hts_code character varying, r_hts_coo character varying, r_desc character varying, r_unit_price_amt numeric, r_qty integer, r_usd_amt numeric)
  LANGUAGE plpgsql
AS $function$
declare
	v_salesorder		VARCHAR(50);
	v_hst_usa		VARCHAR(50);
	v_model_desc		VARCHAR(100);
	v_coo			VARCHAR(10);
	v_unit_price		DECIMAL(15, 2);
	v_shipqty		INT;

	r_min 			INTEGER := 0 ; 
	r_max 			INTEGER := 0 ;

	v_tmp_modelid		VARCHAR(50);
	r			RECORD;

BEGIN
	IF transtype IS NULL THEN
		RAISE EXCEPTION 'Transaction type can not be null';
	END IF;

	if transtype = 'DETAIL' THEN
		DROP TABLE IF EXISTS table_modelid_by_dn;
		CREATE TEMP TABLE table_modelid_by_dn 
		(
		    _rowid              INT GENERATED BY DEFAULT AS IDENTITY,
		    _modelid	        VARCHAR(255) DEFAULT null
		) ON COMMIT DROP;	
	
		DROP TABLE IF EXISTS table_comminvoice_detail;
        CREATE TEMP TABLE table_comminvoice_detail
        (
            t_rowid             INT GENERATED BY DEFAULT AS IDENTITY (START WITH 10 INCREMENT BY 10),
            t_deliverynum	VARCHAR(50)	DEFAULT NULL,
            t_pn		VARCHAR(500) 	DEFAULT NULL,
            t_hts_code	     	VARCHAR(500) 	DEFAULT NULL,
            t_coo               VARCHAR(500) 	DEFAULT NULL,
            t_desc              VARCHAR(500) 	DEFAULT NULL,
            t_unit_price        numeric 	DEFAULT NULL,
            t_qty               int 		DEFAULT NULL,
            t_usd_amt           numeric 	DEFAULT NULL
        ) ON COMMIT DROP;
       
       	v_coo := 'MX';
       
       	SELECT salesorder_id INTO v_salesorder FROM shp_deliverynumberdetail WHERE deliverynumber_id = v_shiporderno;
       
	INSERT INTO table_modelid_by_dn (_modelid)
		SELECT DISTINCT (ms.model_id) FROM mfg_serialnumber ms INNER JOIN shp_palletserialnumber b ON ms.serial_number = b.serial_number 
		WHERE b.pallet_id IN (SELECT pallet_id FROM shp_palletdeliverynumber sp WHERE deliverynumber_id = v_shiporderno);

	SELECT MIN(_rowid) INTO r_min FROM table_modelid_by_dn;
	SELECT MAX(_rowid) INTO r_max FROM table_modelid_by_dn;
	
	WHILE (r_min <= r_max)
	    LOOP
	    	SELECT _modelid INTO v_tmp_modelid FROM table_modelid_by_dn WHERE _rowid = r_min;
		
		SELECT hst_usa INTO v_hst_usa FROM mfg_materialdatarelated WHERE model_id = v_tmp_modelid;
		IF v_hst_usa IS NULL then
			v_hst_usa := 'N/A';
		END IF;
		
		SELECT model_desc INTO v_model_desc FROM mfg_materialmaster WHERE model_id = v_tmp_modelid;

		SELECT unit_price INTO v_unit_price FROM shp_salesorderdetail WHERE skuno_id = v_tmp_modelid AND salesorder_id = v_salesorder; 

		SELECT ship_qty INTO v_shipqty FROM shp_deliverynumberdetail WHERE skuno_id = v_tmp_modelid AND deliverynumber_id = v_shiporderno;
	    	
	    	INSERT INTO table_comminvoice_detail (t_deliverynum, t_pn, t_hts_code, t_coo, t_desc, t_unit_price, t_qty, t_usd_amt)
	    	VALUES (v_shiporderno, v_tmp_modelid, v_hst_usa, v_coo, v_model_desc, v_unit_price, v_shipqty, v_shipqty * v_unit_price);
	    	    	
	    	r_min := r_min + 1;
	    END LOOP;
	   
		RETURN QUERY SELECT * FROM table_comminvoice_detail ORDER BY t_rowid; 
		     
   	END IF;
   
END; 
$function$
;
