CREATE OR REPLACE FUNCTION DFMS_MAZ."AFBS_UPLOAD_GET_FN"(p_transtype IN VARCHAR2) 
	RETURN sys_refcursor
AS
   	v_res   		SYS_REFCURSOR;
	v_count			INTEGER := 0 ;
   	v_fxn_pn		VARCHAR2(500) := NULL ;
   	v_mfg_pn		VARCHAR2(500) := NULL ;
BEGIN
	IF p_transtype = 'GET'
   	THEN
   		OPEN v_res FOR
   			SELECT COMPONENT_SN, NVL(FXN_MODEL_ID, 'N/A') AS FXN_MODEL_ID, NVL(AWS_MODEL_ID, 'N/A') AS AWS_MODEL_ID,
   			'N/A' AS MODEL_DESC,
   			'N/A' AS MODEL_TYPE,
   			TO_CHAR(CREATED, 'MM/DD/YYYY HH24:MI:SS')AS CREATE_DATE, 
   			NVL(CREATED_BY, 'N/A') AS CREATED_BY, 
   			NVL(TO_CHAR(LAST_UPDATE, 'MM/DD/YYYY HH24:MI:SS'), 'N/A') AS UPDATE_DATE, 
   			NVL(LAST_UPDATE_BY, 'N/A') AS LAST_UPDATE_BY
   		    FROM SHP_SB_WH;
   	ELSIF TRIM(SUBSTR(p_transtype, 1, INSTR(p_transtype, '|', -1, 1) -1)) = 'GET_PN_DETAILS_BY_MFG_MODEL'
   	THEN
   		v_mfg_pn := TRIM(SUBSTR(p_transtype, INSTR(p_transtype, '|', -1, 1) +1)) ;

		SELECT COUNT(1) INTO v_count FROM ERP_S_MATERIAL_MASTER WHERE MANUFACTURE_PN = v_mfg_pn ;
		IF v_count = 0
		THEN
			OPEN v_res FOR
				SELECT 'Invalid Manufacturing PN. Try again!|ERROR' FROM DUAL;
		ELSE
	   		OPEN v_res FOR
	   			SELECT NVL(MATNR || '|FXN_MODEL_ID', 'N/A') AS FXN_MODEL_ID , 
	   				   NVL(CUSTOMER_PN || '|AWS_MODEL_ID', 'N/A') AS AWS_MODEL_ID ,
	   				   NVL(MANUFACTURE_PN || '|HH_MODEL_ID', 'N/A') AS HH_MODEL_ID  
	   			FROM ERP_S_MATERIAL_MASTER WHERE MANUFACTURE_PN = v_mfg_pn ;
	   	END IF;
	ELSIF TRIM(SUBSTR(p_transtype, 1, INSTR(p_transtype, '|', -1, 1) -1)) = 'GET_PN_DETAILS_BY_FXN_MODEL'
   	THEN
   		v_fxn_pn := TRIM(SUBSTR(p_transtype, INSTR(p_transtype, '|', -1, 1) +1)) ;
		SELECT COUNT(1) INTO v_count FROM ERP_S_MATERIAL_MASTER WHERE MATNR = v_fxn_pn ;
		IF v_count = 0
		THEN
			OPEN v_res FOR
				SELECT 'Invalid Foxconn PN. Try again!|ERROR' FROM DUAL;
		ELSE
	   		OPEN v_res FOR
	   			SELECT NVL(MATNR || '|FXN_MODEL_ID', 'N/A') AS FXN_MODEL_ID , 
	   				   NVL(CUSTOMER_PN || '|AWS_MODEL_ID', 'N/A') AS AWS_MODEL_ID ,
	   				   NVL(MANUFACTURE_PN || '|HH_MODEL_ID', 'N/A') AS HH_MODEL_ID  
	   			FROM ERP_S_MATERIAL_MASTER WHERE MATNR = v_fxn_pn ;
	   	END IF;
   	ELSIF TRIM(SUBSTR(p_transtype, 1, INSTR(p_transtype, '|', -1, 1) -1)) = 'GET_MASK_RULES'
   	THEN
   		v_fxn_pn := TRIM(SUBSTR(p_transtype, INSTR(p_transtype, '|', -1, 1) +1)) ;
   		IF v_fxn_pn = 'N/A'
   		THEN
			OPEN v_res FOR
				SELECT 'Foxconn PN Not Found!|ERROR' FROM DUAL;
   		ELSE
   			SELECT COUNT(1) INTO v_count FROM
			(SELECT CASE WHEN c.REF_DESIGNATOR IS NULL THEN 'BARCODE_1D' ELSE 'BARCODE_2D' END AS BARCODE, 
				   b.PART_MASK_REGEXP , 
				   c.START_INDEX , 
				   c.STRING_LENGTH , 
				   a.REF_DESIGNATOR , 
				   a.MATNR , 
				   a.CUSTOMER_PN , 
				   a.MANUFACTURE_PN 
			FROM (SELECT MATNR || '[S/N]' REF_DESIGNATOR , MATNR , CUSTOMER_PN , MANUFACTURE_PN FROM ERP_S_MATERIAL_MASTER
				  WHERE MATNR IN (SELECT REGEXP_SUBSTR(v_fxn_pn, '[^,]+', 1, LEVEL) FOXCONN_PN 
				  				  FROM DUAL CONNECT BY LEVEL <= LENGTH(TRIM(BOTH ',' FROM v_fxn_pn)) - LENGTH(REPLACE(v_fxn_pn, ',')) + 1)) a
			LEFT JOIN WIP_S_PARTS_MASKS b ON a.REF_DESIGNATOR = b.REF_DESIGNATOR 
			LEFT JOIN WIP_S_2D_MATRIX c ON b.REF_DESIGNATOR = c.REF_DESIGNATOR);
		
			IF v_count = 0
			THEN
				OPEN v_res FOR
					SELECT 'ERROR' FROM DUAL;
			ELSE
				OPEN v_res FOR
					SELECT CASE WHEN c.REF_DESIGNATOR IS NULL THEN 'BARCODE_1D' ELSE 'BARCODE_2D' END AS BARCODE, 
					   NVL(b.PART_MASK_REGEXP , NULL) , 
					   NVL(c.START_INDEX , NULL) , 
					   NVL(c.STRING_LENGTH , NULL) , 
					   NVL(a.MATNR , NULL) , 
					   NVL(a.CUSTOMER_PN , NULL) , 
					   NVL(a.MANUFACTURE_PN , NULL) 
					FROM (SELECT MATNR || '[S/N]' REF_DESIGNATOR , MATNR , CUSTOMER_PN , MANUFACTURE_PN FROM ERP_S_MATERIAL_MASTER
						  WHERE MATNR IN (SELECT REGEXP_SUBSTR(v_fxn_pn, '[^,]+', 1, LEVEL) FOXCONN_PN 
						  				  FROM DUAL CONNECT BY LEVEL <= LENGTH(TRIM(BOTH ',' FROM v_fxn_pn)) - LENGTH(REPLACE(v_fxn_pn, ',')) + 1)) a
					LEFT JOIN WIP_S_PARTS_MASKS b ON a.REF_DESIGNATOR = b.REF_DESIGNATOR 
					LEFT JOIN WIP_S_2D_MATRIX c ON b.REF_DESIGNATOR = c.REF_DESIGNATOR
					WHERE b.REF_DESIGNATOR IS NOT NULL
					
					UNION
				
					SELECT CASE WHEN c.REF_DESIGNATOR IS NULL THEN 'BARCODE_1D' ELSE 'BARCODE_2D' END AS BARCODE, 
					   NVL(b.PART_MASK_REGEXP , NULL) , 
					   NVL(c.START_INDEX , NULL) , 
					   NVL(c.STRING_LENGTH , NULL) , 
					   NVL(a.MATNR , NULL) , 
					   NVL(a.CUSTOMER_PN , NULL) , 
					   NVL(a.MANUFACTURE_PN , NULL) 
					FROM (SELECT MATNR || '[LOTCODE]' REF_DESIGNATOR , MATNR , CUSTOMER_PN , MANUFACTURE_PN FROM ERP_S_MATERIAL_MASTER
						  WHERE MATNR IN (SELECT REGEXP_SUBSTR(v_fxn_pn, '[^,]+', 1, LEVEL) FOXCONN_PN 
						  				  FROM DUAL CONNECT BY LEVEL <= LENGTH(TRIM(BOTH ',' FROM v_fxn_pn)) - LENGTH(REPLACE(v_fxn_pn, ',')) + 1)) a
					LEFT JOIN WIP_S_PARTS_MASKS b ON a.REF_DESIGNATOR = b.REF_DESIGNATOR 
					LEFT JOIN WIP_S_2D_MATRIX c ON b.REF_DESIGNATOR = c.REF_DESIGNATOR
					WHERE b.REF_DESIGNATOR IS NOT NULL ;
			END IF;
   		END IF;
   	ELSIF p_transtype = 'GET_BS_CSN_TABLE_HEADER'
   	THEN
		OPEN v_res FOR
			--SELECT 'No.' AS "ROWNUM" , 'Component SN' AS COMPONENT_SN , 'FXN PN' AS FOXCONN_PN , 'AWS PN' AS MANUFACTURE_PN , 'MFG PN' AS HONHAI_PN , 'Action' AS "ACTION" FROM DUAL;
			SELECT 'Component SN' AS COMPONENT_SN , 'FXN PN' AS FOXCONN_PN , 'AWS PN' AS MANUFACTURE_PN , 'MFG PN' AS HONHAI_PN , 'Action' AS "ACTION" FROM DUAL;
    END IF;
   
   	RETURN v_res;
EXCEPTION
   WHEN OTHERS
   THEN
      RETURN v_res;
END AFBS_UPLOAD_GET_FN;
